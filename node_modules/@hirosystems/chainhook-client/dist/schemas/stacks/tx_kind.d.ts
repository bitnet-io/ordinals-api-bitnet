import { Static } from '@sinclair/typebox';
export declare const StacksTransactionContractCallKindSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"ContractCall">;
    data: import("@sinclair/typebox").TObject<{
        args: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
        contract_identifier: import("@sinclair/typebox").TString;
        method: import("@sinclair/typebox").TString;
    }>;
}>;
export type StacksTransactionContractCallKind = Static<typeof StacksTransactionContractCallKindSchema>;
export declare const StacksTransactionContractDeploymentKindSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"ContractDeployment">;
    data: import("@sinclair/typebox").TObject<{
        contract_identifier: import("@sinclair/typebox").TString;
        code: import("@sinclair/typebox").TString;
    }>;
}>;
export type StacksTransactionContractDeploymentKind = Static<typeof StacksTransactionContractDeploymentKindSchema>;
export declare const StacksTransactionCoinbaseKindSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"Coinbase">;
}>;
export type StacksTransactionCoinbaseKind = Static<typeof StacksTransactionCoinbaseKindSchema>;
export declare const StacksTransactionNativeTokenTransferKindSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"NativeTokenTransfer">;
}>;
export type StacksTransactionNativeTokenTransferKind = Static<typeof StacksTransactionNativeTokenTransferKindSchema>;
export declare const StacksTransactionBitcoinOpStackStxKindSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"BitcoinOp">;
    data: import("@sinclair/typebox").TObject<{
        locked_amount: import("@sinclair/typebox").TString;
        stacking_address: import("@sinclair/typebox").TString;
        unlock_height: import("@sinclair/typebox").TString;
    }>;
}>;
export type StacksTransactionBitcoinOpStackStxKind = Static<typeof StacksTransactionBitcoinOpStackStxKindSchema>;
export declare const StacksTransactionBitcoinOpDelegateStackStxKindSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"BitcoinOp">;
    data: import("@sinclair/typebox").TObject<{
        stacking_address: import("@sinclair/typebox").TString;
        amount: import("@sinclair/typebox").TString;
        delegate: import("@sinclair/typebox").TString;
        pox_address: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        unlock_height: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
}>;
export type StacksTransactionBitcoinOpDelegateStackStxKind = Static<typeof StacksTransactionBitcoinOpDelegateStackStxKindSchema>;
export declare const StacksTransactionUnsupportedKindSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"Unsupported">;
}>;
export type StacksTransactionUnsupportedKind = Static<typeof StacksTransactionUnsupportedKindSchema>;
export declare const StacksTransactionKindSchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"Coinbase">;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"ContractCall">;
    data: import("@sinclair/typebox").TObject<{
        args: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
        contract_identifier: import("@sinclair/typebox").TString;
        method: import("@sinclair/typebox").TString;
    }>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"ContractDeployment">;
    data: import("@sinclair/typebox").TObject<{
        contract_identifier: import("@sinclair/typebox").TString;
        code: import("@sinclair/typebox").TString;
    }>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"NativeTokenTransfer">;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"BitcoinOp">;
    data: import("@sinclair/typebox").TObject<{
        locked_amount: import("@sinclair/typebox").TString;
        stacking_address: import("@sinclair/typebox").TString;
        unlock_height: import("@sinclair/typebox").TString;
    }>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"BitcoinOp">;
    data: import("@sinclair/typebox").TObject<{
        stacking_address: import("@sinclair/typebox").TString;
        amount: import("@sinclair/typebox").TString;
        delegate: import("@sinclair/typebox").TString;
        pox_address: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        unlock_height: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"Unsupported">;
}>]>;
export type StacksTransactionKind = Static<typeof StacksTransactionKindSchema>;
