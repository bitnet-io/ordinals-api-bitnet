"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StacksTransactionEventSchema = exports.StacksTransactionDataMapDeleteEventSchema = exports.StacksTransactionDataMapUpdateEventSchema = exports.StacksTransactionDataMapInsertEventSchema = exports.StacksTransactionDataVarSetEventSchema = exports.StacksTransactionStxBurnEventSchema = exports.StacksTransactionStxLockEventSchema = exports.StacksTransactionStxMintEventSchema = exports.StacksTransactionStxTransferEventSchema = exports.StacksTransactionSmartContractEventSchema = exports.StacksTransactionFtBurnEventSchema = exports.StacksTransactionFtMintEventSchema = exports.StacksTransactionFtTransferEventSchema = exports.StacksTransactionNftBurnEventSchema = exports.StacksTransactionNftTransferEventSchema = exports.StacksTransactionNftMintEventSchema = void 0;
const typebox_1 = require("@sinclair/typebox");
exports.StacksTransactionNftMintEventSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('NFTMintEvent'),
    data: typebox_1.Type.Object({
        asset_class_identifier: typebox_1.Type.String(),
        asset_identifier: typebox_1.Type.String(),
        recipient: typebox_1.Type.String(),
    }),
});
exports.StacksTransactionNftTransferEventSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('NFTTransferEvent'),
    data: typebox_1.Type.Object({
        raw_value: typebox_1.Type.String(),
        asset_identifier: typebox_1.Type.String(),
        recipient: typebox_1.Type.String(),
        sender: typebox_1.Type.String(),
    }),
});
exports.StacksTransactionNftBurnEventSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('NFTBurnEvent'),
    data: typebox_1.Type.Object({
        asset_class_identifier: typebox_1.Type.String(),
        asset_identifier: typebox_1.Type.String(),
        sender: typebox_1.Type.String(),
    }),
});
exports.StacksTransactionFtTransferEventSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('FTTransferEvent'),
    data: typebox_1.Type.Object({
        amount: typebox_1.Type.String(),
        asset_identifier: typebox_1.Type.String(),
        recipient: typebox_1.Type.String(),
        sender: typebox_1.Type.String(),
    }),
});
exports.StacksTransactionFtMintEventSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('FTMintEvent'),
    data: typebox_1.Type.Object({
        amount: typebox_1.Type.String(),
        asset_identifier: typebox_1.Type.String(),
        recipient: typebox_1.Type.String(),
    }),
});
exports.StacksTransactionFtBurnEventSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('FTBurnEvent'),
    data: typebox_1.Type.Object({
        amount: typebox_1.Type.String(),
        asset_identifier: typebox_1.Type.String(),
        sender: typebox_1.Type.String(),
    }),
});
exports.StacksTransactionSmartContractEventSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('SmartContractEvent'),
    data: typebox_1.Type.Object({
        contract_identifier: typebox_1.Type.String(),
        raw_value: typebox_1.Type.String(),
        topic: typebox_1.Type.String(),
    }),
});
exports.StacksTransactionStxTransferEventSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('STXTransferEvent'),
    data: typebox_1.Type.Object({
        amount: typebox_1.Type.String(),
        sender: typebox_1.Type.String(),
        recipient: typebox_1.Type.String(),
    }),
});
exports.StacksTransactionStxMintEventSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('STXMintEvent'),
    data: typebox_1.Type.Object({
        amount: typebox_1.Type.String(),
        recipient: typebox_1.Type.String(),
    }),
});
exports.StacksTransactionStxLockEventSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('STXLockEvent'),
    data: typebox_1.Type.Object({
        locked_amount: typebox_1.Type.String(),
        unlock_height: typebox_1.Type.String(),
        locked_address: typebox_1.Type.String(),
    }),
});
exports.StacksTransactionStxBurnEventSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('STXBurnEvent'),
    data: typebox_1.Type.Object({
        amount: typebox_1.Type.String(),
        sender: typebox_1.Type.String(),
    }),
});
exports.StacksTransactionDataVarSetEventSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('DataVarSetEvent'),
    data: typebox_1.Type.Object({
        contract_identifier: typebox_1.Type.String(),
        var: typebox_1.Type.String(),
        new_value: typebox_1.Type.Any(),
    }),
});
exports.StacksTransactionDataMapInsertEventSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('DataMapInsertEvent'),
    data: typebox_1.Type.Object({
        contract_identifier: typebox_1.Type.String(),
        map: typebox_1.Type.String(),
        inserted_key: typebox_1.Type.Any(),
        inserted_value: typebox_1.Type.Any(),
    }),
});
exports.StacksTransactionDataMapUpdateEventSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('DataMapUpdateEvent'),
    data: typebox_1.Type.Object({
        contract_identifier: typebox_1.Type.String(),
        map: typebox_1.Type.String(),
        key: typebox_1.Type.Any(),
        new_value: typebox_1.Type.Any(),
    }),
});
exports.StacksTransactionDataMapDeleteEventSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Literal('DataMapDeleteEvent'),
    data: typebox_1.Type.Object({
        contract_identifier: typebox_1.Type.String(),
        map: typebox_1.Type.String(),
        deleted_key: typebox_1.Type.Any(),
    }),
});
exports.StacksTransactionEventSchema = typebox_1.Type.Union([
    exports.StacksTransactionFtTransferEventSchema,
    exports.StacksTransactionFtMintEventSchema,
    exports.StacksTransactionFtBurnEventSchema,
    exports.StacksTransactionNftTransferEventSchema,
    exports.StacksTransactionNftMintEventSchema,
    exports.StacksTransactionNftBurnEventSchema,
    exports.StacksTransactionStxTransferEventSchema,
    exports.StacksTransactionStxMintEventSchema,
    exports.StacksTransactionStxLockEventSchema,
    exports.StacksTransactionStxBurnEventSchema,
    exports.StacksTransactionDataVarSetEventSchema,
    exports.StacksTransactionDataMapInsertEventSchema,
    exports.StacksTransactionDataMapUpdateEventSchema,
    exports.StacksTransactionDataMapDeleteEventSchema,
    exports.StacksTransactionSmartContractEventSchema,
]);
//# sourceMappingURL=tx_events.js.map