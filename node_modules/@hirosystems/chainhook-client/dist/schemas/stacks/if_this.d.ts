import { Static } from '@sinclair/typebox';
export declare const StacksIfThisTxIdSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"txid">;
    equals: import("@sinclair/typebox").TString;
}>;
export type StacksIfThisTxId = Static<typeof StacksIfThisTxIdSchema>;
export declare const StacksIfThisBlockHeightHigherThanSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"block_height">;
    higher_than: import("@sinclair/typebox").TInteger;
}>;
export type StacksIfThisBlockHeightHigherThan = Static<typeof StacksIfThisBlockHeightHigherThanSchema>;
export declare const StacksIfThisFtEventSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"ft_event">;
    asset_identifier: import("@sinclair/typebox").TString;
    actions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"mint">, import("@sinclair/typebox").TLiteral<"transfer">, import("@sinclair/typebox").TLiteral<"burn">]>>;
}>;
export type StacksIfThisFtEvent = Static<typeof StacksIfThisFtEventSchema>;
export declare const StacksIfThisNftEventSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"nft_event">;
    asset_identifier: import("@sinclair/typebox").TString;
    actions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"mint">, import("@sinclair/typebox").TLiteral<"transfer">, import("@sinclair/typebox").TLiteral<"burn">]>>;
}>;
export type StacksIfThisNftEvent = Static<typeof StacksIfThisNftEventSchema>;
export declare const StacksIfThisStxEventSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"stx_event">;
    actions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"mint">, import("@sinclair/typebox").TLiteral<"transfer">, import("@sinclair/typebox").TLiteral<"burn">, import("@sinclair/typebox").TLiteral<"lock">]>>;
}>;
export type StacksIfThisStxEvent = Static<typeof StacksIfThisStxEventSchema>;
export declare const StacksIfThisPrintEventSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"print_event">;
    contract_identifier: import("@sinclair/typebox").TString;
    contains: import("@sinclair/typebox").TString;
}>;
export type StacksIfThisPrintEvent = Static<typeof StacksIfThisPrintEventSchema>;
export declare const StacksIfThisContractCallSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"contract_call">;
    contract_identifier: import("@sinclair/typebox").TString;
    method: import("@sinclair/typebox").TString;
}>;
export type StacksIfThisContractCall = Static<typeof StacksIfThisContractCallSchema>;
export declare const StacksIfThisContractDeploymentSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"contract_deployment">;
    deployer: import("@sinclair/typebox").TString;
}>;
export type StacksIfThisContractDeployment = Static<typeof StacksIfThisContractDeploymentSchema>;
export declare const StacksIfThisContractDeploymentTraitSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"contract_deployment">;
    implement_trait: import("@sinclair/typebox").TString;
}>;
export type StacksIfThisContractDeploymentTrait = Static<typeof StacksIfThisContractDeploymentTraitSchema>;
export declare const StacksIfThisOptionsSchema: import("@sinclair/typebox").TObject<{
    start_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    end_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    expire_after_occurrence: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    decode_clarity_values: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
}>;
export type StacksIfThisOptions = Static<typeof StacksIfThisOptionsSchema>;
export declare const StacksIfThisSchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"txid">;
    equals: import("@sinclair/typebox").TString;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"block_height">;
    higher_than: import("@sinclair/typebox").TInteger;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"ft_event">;
    asset_identifier: import("@sinclair/typebox").TString;
    actions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"mint">, import("@sinclair/typebox").TLiteral<"transfer">, import("@sinclair/typebox").TLiteral<"burn">]>>;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"nft_event">;
    asset_identifier: import("@sinclair/typebox").TString;
    actions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"mint">, import("@sinclair/typebox").TLiteral<"transfer">, import("@sinclair/typebox").TLiteral<"burn">]>>;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"stx_event">;
    actions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"mint">, import("@sinclair/typebox").TLiteral<"transfer">, import("@sinclair/typebox").TLiteral<"burn">, import("@sinclair/typebox").TLiteral<"lock">]>>;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"print_event">;
    contract_identifier: import("@sinclair/typebox").TString;
    contains: import("@sinclair/typebox").TString;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"contract_call">;
    contract_identifier: import("@sinclair/typebox").TString;
    method: import("@sinclair/typebox").TString;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"contract_deployment">;
    deployer: import("@sinclair/typebox").TString;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"contract_deployment">;
    implement_trait: import("@sinclair/typebox").TString;
}>]>;
export type StacksIfThis = Static<typeof StacksIfThisSchema>;
export declare const StacksIfThisThenThatSchema: import("@sinclair/typebox").TObject<{
    start_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    end_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    expire_after_occurrence: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    decode_clarity_values: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    if_this: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"txid">;
        equals: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"block_height">;
        higher_than: import("@sinclair/typebox").TInteger;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"ft_event">;
        asset_identifier: import("@sinclair/typebox").TString;
        actions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"mint">, import("@sinclair/typebox").TLiteral<"transfer">, import("@sinclair/typebox").TLiteral<"burn">]>>;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"nft_event">;
        asset_identifier: import("@sinclair/typebox").TString;
        actions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"mint">, import("@sinclair/typebox").TLiteral<"transfer">, import("@sinclair/typebox").TLiteral<"burn">]>>;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"stx_event">;
        actions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"mint">, import("@sinclair/typebox").TLiteral<"transfer">, import("@sinclair/typebox").TLiteral<"burn">, import("@sinclair/typebox").TLiteral<"lock">]>>;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"print_event">;
        contract_identifier: import("@sinclair/typebox").TString;
        contains: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"contract_call">;
        contract_identifier: import("@sinclair/typebox").TString;
        method: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"contract_deployment">;
        deployer: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"contract_deployment">;
        implement_trait: import("@sinclair/typebox").TString;
    }>]>;
    then_that: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        file_append: import("@sinclair/typebox").TObject<{
            path: import("@sinclair/typebox").TString;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        http_post: import("@sinclair/typebox").TObject<{
            url: import("@sinclair/typebox").TString;
            authorization_header: import("@sinclair/typebox").TString;
        }>;
    }>]>;
}>;
export type StacksIfThisThenThat = Static<typeof StacksIfThisThenThatSchema>;
