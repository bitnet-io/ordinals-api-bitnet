import { Static } from '@sinclair/typebox';
export declare const BitcoinIfThisTxIdSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"txid">;
    equals: import("@sinclair/typebox").TString;
}>;
export type BitcoinIfThisTxId = Static<typeof BitcoinIfThisTxIdSchema>;
export declare const BitcoinIfThisOpReturnStartsWithSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"outputs">;
    op_return: import("@sinclair/typebox").TObject<{
        starts_with: import("@sinclair/typebox").TString;
    }>;
}>;
export type BitcoinIfThisOpReturnStartsWith = Static<typeof BitcoinIfThisOpReturnStartsWithSchema>;
export declare const BitcoinIfThisOpReturnEqualsSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"outputs">;
    op_return: import("@sinclair/typebox").TObject<{
        equals: import("@sinclair/typebox").TString;
    }>;
}>;
export type BitcoinIfThisOpReturnEquals = Static<typeof BitcoinIfThisOpReturnEqualsSchema>;
export declare const BitcoinIfThisOpReturnEndsWithSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"outputs">;
    op_return: import("@sinclair/typebox").TObject<{
        ends_with: import("@sinclair/typebox").TString;
    }>;
}>;
export type BitcoinIfThisOpReturnEndsWith = Static<typeof BitcoinIfThisOpReturnEndsWithSchema>;
export declare const BitcoinIfThisP2PKHSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"outputs">;
    p2pkh: import("@sinclair/typebox").TObject<{
        equals: import("@sinclair/typebox").TString;
    }>;
}>;
export type BitcoinIfThisP2PKH = Static<typeof BitcoinIfThisP2PKHSchema>;
export declare const BitcoinIfThisP2SHSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"outputs">;
    p2sh: import("@sinclair/typebox").TObject<{
        equals: import("@sinclair/typebox").TString;
    }>;
}>;
export type BitcoinIfThisP2SH = Static<typeof BitcoinIfThisP2SHSchema>;
export declare const BitcoinIfThisP2WPKHSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"outputs">;
    p2wpkh: import("@sinclair/typebox").TObject<{
        equals: import("@sinclair/typebox").TString;
    }>;
}>;
export type BitcoinIfThisP2WPKH = Static<typeof BitcoinIfThisP2WPKHSchema>;
export declare const BitcoinIfThisP2WSHSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"outputs">;
    p2wsh: import("@sinclair/typebox").TObject<{
        equals: import("@sinclair/typebox").TString;
    }>;
}>;
export type BitcoinIfThisP2WSH = Static<typeof BitcoinIfThisP2WSHSchema>;
export declare const BitcoinIfThisStacksBlockCommittedSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
    operation: import("@sinclair/typebox").TLiteral<"block_committed">;
}>;
export type BitcoinIfThisStacksBlockCommitted = Static<typeof BitcoinIfThisStacksBlockCommittedSchema>;
export declare const BitcoinIfThisStacksLeaderKeyRegisteredSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
    operation: import("@sinclair/typebox").TLiteral<"leader_registered">;
}>;
export type BitcoinIfThisStacksLeaderKeyRegistered = Static<typeof BitcoinIfThisStacksLeaderKeyRegisteredSchema>;
export declare const BitcoinIfThisStacksStxTransferredSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
    operation: import("@sinclair/typebox").TLiteral<"stx_transfered">;
}>;
export type BitcoinIfThisStacksStxTransferred = Static<typeof BitcoinIfThisStacksStxTransferredSchema>;
export declare const BitcoinIfThisStacksStxLockedSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
    operation: import("@sinclair/typebox").TLiteral<"stx_locked">;
}>;
export type BitcoinIfThisStacksStxLocked = Static<typeof BitcoinIfThisStacksStxLockedSchema>;
export declare const BitcoinIfThisOrdinalsFeedSchema: import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"ordinals_protocol">;
    operation: import("@sinclair/typebox").TLiteral<"inscription_feed">;
}>;
export type BitcoinIfThisOrdinalsFeed = Static<typeof BitcoinIfThisOrdinalsFeedSchema>;
export declare const BitcoinIfThisOptionsSchema: import("@sinclair/typebox").TObject<{
    start_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    end_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    expire_after_occurrence: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    include_proof: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    include_inputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    include_outputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    include_witness: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
}>;
export type BitcoinIfThisOptions = Static<typeof BitcoinIfThisOptionsSchema>;
export declare const BitcoinIfThisSchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"txid">;
    equals: import("@sinclair/typebox").TString;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"outputs">;
    op_return: import("@sinclair/typebox").TObject<{
        starts_with: import("@sinclair/typebox").TString;
    }>;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"outputs">;
    op_return: import("@sinclair/typebox").TObject<{
        equals: import("@sinclair/typebox").TString;
    }>;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"outputs">;
    op_return: import("@sinclair/typebox").TObject<{
        ends_with: import("@sinclair/typebox").TString;
    }>;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"outputs">;
    p2pkh: import("@sinclair/typebox").TObject<{
        equals: import("@sinclair/typebox").TString;
    }>;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"outputs">;
    p2sh: import("@sinclair/typebox").TObject<{
        equals: import("@sinclair/typebox").TString;
    }>;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"outputs">;
    p2wpkh: import("@sinclair/typebox").TObject<{
        equals: import("@sinclair/typebox").TString;
    }>;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"outputs">;
    p2wsh: import("@sinclair/typebox").TObject<{
        equals: import("@sinclair/typebox").TString;
    }>;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
    operation: import("@sinclair/typebox").TLiteral<"block_committed">;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
    operation: import("@sinclair/typebox").TLiteral<"leader_registered">;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
    operation: import("@sinclair/typebox").TLiteral<"stx_transfered">;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
    operation: import("@sinclair/typebox").TLiteral<"stx_locked">;
}>, import("@sinclair/typebox").TObject<{
    scope: import("@sinclair/typebox").TLiteral<"ordinals_protocol">;
    operation: import("@sinclair/typebox").TLiteral<"inscription_feed">;
}>]>;
export type BitcoinIfThis = Static<typeof BitcoinIfThisSchema>;
export declare const BitcoinIfThisThenThatSchema: import("@sinclair/typebox").TObject<{
    start_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    end_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    expire_after_occurrence: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    if_this: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"txid">;
        equals: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"outputs">;
        op_return: import("@sinclair/typebox").TObject<{
            starts_with: import("@sinclair/typebox").TString;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"outputs">;
        op_return: import("@sinclair/typebox").TObject<{
            equals: import("@sinclair/typebox").TString;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"outputs">;
        op_return: import("@sinclair/typebox").TObject<{
            ends_with: import("@sinclair/typebox").TString;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"outputs">;
        p2pkh: import("@sinclair/typebox").TObject<{
            equals: import("@sinclair/typebox").TString;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"outputs">;
        p2sh: import("@sinclair/typebox").TObject<{
            equals: import("@sinclair/typebox").TString;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"outputs">;
        p2wpkh: import("@sinclair/typebox").TObject<{
            equals: import("@sinclair/typebox").TString;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"outputs">;
        p2wsh: import("@sinclair/typebox").TObject<{
            equals: import("@sinclair/typebox").TString;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
        operation: import("@sinclair/typebox").TLiteral<"block_committed">;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
        operation: import("@sinclair/typebox").TLiteral<"leader_registered">;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
        operation: import("@sinclair/typebox").TLiteral<"stx_transfered">;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
        operation: import("@sinclair/typebox").TLiteral<"stx_locked">;
    }>, import("@sinclair/typebox").TObject<{
        scope: import("@sinclair/typebox").TLiteral<"ordinals_protocol">;
        operation: import("@sinclair/typebox").TLiteral<"inscription_feed">;
    }>]>;
    then_that: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        file_append: import("@sinclair/typebox").TObject<{
            path: import("@sinclair/typebox").TString;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        http_post: import("@sinclair/typebox").TObject<{
            url: import("@sinclair/typebox").TString;
            authorization_header: import("@sinclair/typebox").TString;
        }>;
    }>]>;
    include_proof: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    include_inputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    include_outputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    include_witness: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
}>;
export type BitcoinIfThisThenThat = Static<typeof BitcoinIfThisThenThatSchema>;
