"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionIdentifierSchema = exports.BlockIdentifierSchema = exports.RosettaOperationSchema = exports.RosettaOperationMetadataSchema = exports.RosettaOperationPublicKeySchema = exports.RosettaOperationAmountSchema = exports.RosettaOperationAccountSchema = exports.RosettaOperationTypeSchema = exports.RosettaOperationIdentifierSchema = exports.Nullable = void 0;
const typebox_1 = require("@sinclair/typebox");
const Nullable = (type) => typebox_1.Type.Union([type, typebox_1.Type.Null()]);
exports.Nullable = Nullable;
exports.RosettaOperationIdentifierSchema = typebox_1.Type.Object({
    index: typebox_1.Type.Integer(),
    network_index: typebox_1.Type.Optional(typebox_1.Type.Integer()),
});
exports.RosettaOperationTypeSchema = typebox_1.Type.Union([
    typebox_1.Type.Literal('CREDIT'),
    typebox_1.Type.Literal('DEBIT'),
    typebox_1.Type.Literal('LOCK'),
]);
exports.RosettaOperationAccountSchema = typebox_1.Type.Object({
    address: typebox_1.Type.String(),
    sub_account: typebox_1.Type.Optional(typebox_1.Type.String()),
});
exports.RosettaOperationAmountSchema = typebox_1.Type.Object({
    currency: typebox_1.Type.Object({
        decimals: typebox_1.Type.Integer(),
        symbol: typebox_1.Type.String(),
        metadata: typebox_1.Type.Object({
            asset_class_identifier: typebox_1.Type.String(),
            asset_identifier: (0, exports.Nullable)(typebox_1.Type.String()),
            standard: typebox_1.Type.String(),
        }),
    }),
    value: typebox_1.Type.Integer(),
});
exports.RosettaOperationPublicKeySchema = typebox_1.Type.Object({
    hex_bytes: typebox_1.Type.Optional(typebox_1.Type.String()),
    curve_type: typebox_1.Type.String(),
});
exports.RosettaOperationMetadataSchema = typebox_1.Type.Object({
    public_key: typebox_1.Type.Optional(exports.RosettaOperationPublicKeySchema),
    code: typebox_1.Type.Optional(typebox_1.Type.String()),
    method_name: typebox_1.Type.Optional(typebox_1.Type.String()),
    args: typebox_1.Type.Optional(typebox_1.Type.String()),
});
exports.RosettaOperationSchema = typebox_1.Type.Object({
    account: exports.RosettaOperationAccountSchema,
    amount: typebox_1.Type.Optional(exports.RosettaOperationAmountSchema),
    metadata: typebox_1.Type.Optional(exports.RosettaOperationMetadataSchema),
    operation_identifier: exports.RosettaOperationIdentifierSchema,
    related_operations: typebox_1.Type.Optional(typebox_1.Type.Array(exports.RosettaOperationIdentifierSchema)),
    status: typebox_1.Type.Optional(typebox_1.Type.Literal('SUCCESS')),
    type: exports.RosettaOperationTypeSchema,
});
exports.BlockIdentifierSchema = typebox_1.Type.Object({
    index: typebox_1.Type.Integer(),
    hash: typebox_1.Type.String(),
});
exports.TransactionIdentifierSchema = typebox_1.Type.Object({
    hash: typebox_1.Type.String(),
});
//# sourceMappingURL=common.js.map