import { Static } from '@sinclair/typebox';
export declare const ThenThatFileAppendSchema: import("@sinclair/typebox").TObject<{
    file_append: import("@sinclair/typebox").TObject<{
        path: import("@sinclair/typebox").TString;
    }>;
}>;
export type ThenThatFileAppend = Static<typeof ThenThatFileAppendSchema>;
export declare const ThenThatHttpPostSchema: import("@sinclair/typebox").TObject<{
    http_post: import("@sinclair/typebox").TObject<{
        url: import("@sinclair/typebox").TString;
        authorization_header: import("@sinclair/typebox").TString;
    }>;
}>;
export type ThenThatHttpPost = Static<typeof ThenThatHttpPostSchema>;
export declare const ThenThatSchema: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    file_append: import("@sinclair/typebox").TObject<{
        path: import("@sinclair/typebox").TString;
    }>;
}>, import("@sinclair/typebox").TObject<{
    http_post: import("@sinclair/typebox").TObject<{
        url: import("@sinclair/typebox").TString;
        authorization_header: import("@sinclair/typebox").TString;
    }>;
}>]>;
export type ThenThat = Static<typeof ThenThatSchema>;
export declare const PredicateHeaderSchema: import("@sinclair/typebox").TObject<{
    uuid: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    version: import("@sinclair/typebox").TInteger;
    chain: import("@sinclair/typebox").TString;
}>;
export type PredicateHeader = Static<typeof PredicateHeaderSchema>;
export declare const PredicateSchema: import("@sinclair/typebox").TObject<{
    uuid: import("@sinclair/typebox").TString;
    name: import("@sinclair/typebox").TString;
    version: import("@sinclair/typebox").TInteger;
    chain: import("@sinclair/typebox").TString;
    networks: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        mainnet: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
            start_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            end_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            expire_after_occurrence: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            if_this: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"txid">;
                equals: import("@sinclair/typebox").TString;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"outputs">;
                op_return: import("@sinclair/typebox").TObject<{
                    starts_with: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"outputs">;
                op_return: import("@sinclair/typebox").TObject<{
                    equals: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"outputs">;
                op_return: import("@sinclair/typebox").TObject<{
                    ends_with: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"outputs">;
                p2pkh: import("@sinclair/typebox").TObject<{
                    equals: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"outputs">;
                p2sh: import("@sinclair/typebox").TObject<{
                    equals: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"outputs">;
                p2wpkh: import("@sinclair/typebox").TObject<{
                    equals: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"outputs">;
                p2wsh: import("@sinclair/typebox").TObject<{
                    equals: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
                operation: import("@sinclair/typebox").TLiteral<"block_committed">;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
                operation: import("@sinclair/typebox").TLiteral<"leader_registered">;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
                operation: import("@sinclair/typebox").TLiteral<"stx_transfered">;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
                operation: import("@sinclair/typebox").TLiteral<"stx_locked">;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"ordinals_protocol">;
                operation: import("@sinclair/typebox").TLiteral<"inscription_feed">;
            }>]>;
            then_that: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                file_append: import("@sinclair/typebox").TObject<{
                    path: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                http_post: import("@sinclair/typebox").TObject<{
                    url: import("@sinclair/typebox").TString;
                    authorization_header: import("@sinclair/typebox").TString;
                }>;
            }>]>;
            include_proof: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            include_inputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            include_outputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            include_witness: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        }>, import("@sinclair/typebox").TObject<{
            start_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            end_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            expire_after_occurrence: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            decode_clarity_values: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            if_this: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"txid">;
                equals: import("@sinclair/typebox").TString;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"block_height">;
                higher_than: import("@sinclair/typebox").TInteger;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"ft_event">;
                asset_identifier: import("@sinclair/typebox").TString;
                actions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"mint">, import("@sinclair/typebox").TLiteral<"transfer">, import("@sinclair/typebox").TLiteral<"burn">]>>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"nft_event">;
                asset_identifier: import("@sinclair/typebox").TString;
                actions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"mint">, import("@sinclair/typebox").TLiteral<"transfer">, import("@sinclair/typebox").TLiteral<"burn">]>>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"stx_event">;
                actions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"mint">, import("@sinclair/typebox").TLiteral<"transfer">, import("@sinclair/typebox").TLiteral<"burn">, import("@sinclair/typebox").TLiteral<"lock">]>>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"print_event">;
                contract_identifier: import("@sinclair/typebox").TString;
                contains: import("@sinclair/typebox").TString;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"contract_call">;
                contract_identifier: import("@sinclair/typebox").TString;
                method: import("@sinclair/typebox").TString;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"contract_deployment">;
                deployer: import("@sinclair/typebox").TString;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"contract_deployment">;
                implement_trait: import("@sinclair/typebox").TString;
            }>]>;
            then_that: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                file_append: import("@sinclair/typebox").TObject<{
                    path: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                http_post: import("@sinclair/typebox").TObject<{
                    url: import("@sinclair/typebox").TString;
                    authorization_header: import("@sinclair/typebox").TString;
                }>;
            }>]>;
        }>]>;
    }>, import("@sinclair/typebox").TObject<{
        testnet: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
            start_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            end_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            expire_after_occurrence: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            if_this: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"txid">;
                equals: import("@sinclair/typebox").TString;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"outputs">;
                op_return: import("@sinclair/typebox").TObject<{
                    starts_with: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"outputs">;
                op_return: import("@sinclair/typebox").TObject<{
                    equals: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"outputs">;
                op_return: import("@sinclair/typebox").TObject<{
                    ends_with: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"outputs">;
                p2pkh: import("@sinclair/typebox").TObject<{
                    equals: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"outputs">;
                p2sh: import("@sinclair/typebox").TObject<{
                    equals: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"outputs">;
                p2wpkh: import("@sinclair/typebox").TObject<{
                    equals: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"outputs">;
                p2wsh: import("@sinclair/typebox").TObject<{
                    equals: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
                operation: import("@sinclair/typebox").TLiteral<"block_committed">;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
                operation: import("@sinclair/typebox").TLiteral<"leader_registered">;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
                operation: import("@sinclair/typebox").TLiteral<"stx_transfered">;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"stacks_protocol">;
                operation: import("@sinclair/typebox").TLiteral<"stx_locked">;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"ordinals_protocol">;
                operation: import("@sinclair/typebox").TLiteral<"inscription_feed">;
            }>]>;
            then_that: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                file_append: import("@sinclair/typebox").TObject<{
                    path: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                http_post: import("@sinclair/typebox").TObject<{
                    url: import("@sinclair/typebox").TString;
                    authorization_header: import("@sinclair/typebox").TString;
                }>;
            }>]>;
            include_proof: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            include_inputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            include_outputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            include_witness: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        }>, import("@sinclair/typebox").TObject<{
            start_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            end_block: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            expire_after_occurrence: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
            decode_clarity_values: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            if_this: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"txid">;
                equals: import("@sinclair/typebox").TString;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"block_height">;
                higher_than: import("@sinclair/typebox").TInteger;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"ft_event">;
                asset_identifier: import("@sinclair/typebox").TString;
                actions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"mint">, import("@sinclair/typebox").TLiteral<"transfer">, import("@sinclair/typebox").TLiteral<"burn">]>>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"nft_event">;
                asset_identifier: import("@sinclair/typebox").TString;
                actions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"mint">, import("@sinclair/typebox").TLiteral<"transfer">, import("@sinclair/typebox").TLiteral<"burn">]>>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"stx_event">;
                actions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"mint">, import("@sinclair/typebox").TLiteral<"transfer">, import("@sinclair/typebox").TLiteral<"burn">, import("@sinclair/typebox").TLiteral<"lock">]>>;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"print_event">;
                contract_identifier: import("@sinclair/typebox").TString;
                contains: import("@sinclair/typebox").TString;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"contract_call">;
                contract_identifier: import("@sinclair/typebox").TString;
                method: import("@sinclair/typebox").TString;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"contract_deployment">;
                deployer: import("@sinclair/typebox").TString;
            }>, import("@sinclair/typebox").TObject<{
                scope: import("@sinclair/typebox").TLiteral<"contract_deployment">;
                implement_trait: import("@sinclair/typebox").TString;
            }>]>;
            then_that: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                file_append: import("@sinclair/typebox").TObject<{
                    path: import("@sinclair/typebox").TString;
                }>;
            }>, import("@sinclair/typebox").TObject<{
                http_post: import("@sinclair/typebox").TObject<{
                    url: import("@sinclair/typebox").TString;
                    authorization_header: import("@sinclair/typebox").TString;
                }>;
            }>]>;
        }>]>;
    }>]>;
}>;
export type Predicate = Static<typeof PredicateSchema>;
